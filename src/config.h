#ifndef CONFIG_H
#define CONFIG_H

#define MAX(x,y) ((x) > (y) ? (x) : (y))
#define MIN(x,y) ((x) < (y) ? (x) : (y))

#define BYTE unsigned char

#define NUM_JOINTS 18
#define NUM_SENSORS 33
#define NUM_LED 24
#define NUM_FRAMES 4

#define PI 3.14159265359
#define DEGTO (256.0/180.0)

//for sample_viewer
#define SELECTED_SAMPLE_NUMBER 100

//フィールド関係
#define FIELD_MAX_X	2700
#define FIELD_MAX_Y	1800
#define GOAL_WIDTH	800
#define GOAL_DEPTH	300
#define FIELD_REMAIN_X	300
#define FIELD_REMAIN_Y	200
#define LANDMARK_Y 1950
#define LANDMARK_X 1350

//DeadRec用ロボットの全長(いい加減)
#define ROBOT_LENGTH 300


//関節列挙値
enum JOINT_NAME_TAG
{
	RFLEG1 = 0,
	RFLEG2,
	RFLEG3,

	LFLEG1,
	LFLEG2,
	LFLEG3,
	
	RHLEG1,
	RHLEG2,
	RHLEG3,
	
	LHLEG1,
	LHLEG2,
	LHLEG3,

	TILT1,
	PAN,
	TILT2,
	CHIN,

	TAILTILT,
	TAILPAN,
};

//センサー列挙値
enum SENSOR_NAME_TAG {
	HEAD_PSD_NEAR = 18,
	HEAD_PSD_FAR,
	CHIN_SENSOR,
	CHEST_PSD,
	HEAD_TOUCH,
	BACK_TOUCH_REAR,
	BACK_TOUCH_MIDDLE,
	BACK_TOUCH_FRONT,
	RF_TOUCH,
	LF_TOUCH,
	RH_TOUCH,
	LH_TOUCH,
	ACC_FORE,
	ACC_SIDE,
	ACC_PERP
};

enum LED_NAME_TAG {
	//head
	LED_MODE_INDICATOR_RED,
	LED_MODE_INDICATOR_GREEN,
	LED_MODE_INDICATOR_BLUE,
	LED_WIRELESS_LIGHT,

	//face
	LED_FACE1,
	LED_FACE2,
	LED_FACE3,
	LED_FACE4,
	LED_FACE5,
	LED_FACE6,
	LED_FACE7,
	LED_FACE8,
	LED_FACE9,
	LED_FACE10,
	LED_FACE11,
	LED_FACE12,
	LED_FACE13,
	LED_FACE14,

	//back
	LED_BACK_FRONT_COLOR,
	LED_BACK_FRONT_WHITE,
	LED_BACK_MIDDLE_COLOR,
	LED_BACK_MIDDLE_WHITE,
	LED_BACK_REAR_COLOR,
	LED_BACK_REAR_WHITE
};

enum LED_COLOR_TAG{
	LED_RED,
	LED_GREEN,
	LED_BLUE
};

//顔関係
#define FACE_SLEEP		0x00003
#define FACE_SURPRIZE 	0x0000C
#define FACE_MISS 		0x00030
#define FACE_SMILE 		0x000C0
#define FACE_REDSMILE 	0x02000
#define FACE_CENTERSMILE 0x00400
#define FACE_LOVELY		0x00300
#define FACE_REDLOVELY 	0x01000

#define FACE_GREENSLEEP 0x10003
#define FACE_GREENCONFUSE 	0x1000C
#define FACE_BLUECONFUSE 	0x11000
#define FACE_BLUESLEEP 		0x12000

#define FACE_A_ALL		0x3C3F
#define FACE_B_ALL		0x13FFF

#define FACE_LOST_FIELD 0x107CF
#define FACE_LONGEYE	0xCF
#define FACE_LINE	0x83C
#define FACE_BATSU	0xF3

#define FACE_DRINK		0x8C3		
#define FACE_ARROW		0x13000
#define FACE_GREENWAVE	0x100F3

#define FACE_INITIAL	0x83F
#define FACE_SET		0x1000F
#define FACE_READY		0xCF
#define FACE_PENALYIZED 0xF3
#define FACE_FINISHED	0x8FF

#define FACE_USHIKUN	0x3FC

#define FACE_ONE 		0x800
#define FACE_TWO		0x81
#define FACE_THREE		0x881
#define FACE_FOUR		0xC3
#define FACE_FIVE		0x8C3

#define FACE_GOALIE_RETURN  0xCCF

#define FACE_DP			0x1300F //takeshita for debug
#define FACE_PARA_1		0x13C0F
#define FACE_PARA_2		0x13F0F
#define FACE_PARA_3		0x13CFF
#define FACE_PARA_4		0x13FFF


//画像関係
#define IMAGE_WIDTH 208
#define IMAGE_HEIGHT 160
#define IMAGE_SIZE 208*160
#define YCOMP 0
#define CRCOMP 1
#define CBCOMP 2

enum COLOR_NAME_TAG
{
	ORANGE, FIELDGREEN, GREEN, SKYBLUE, YELLOW, PINK, DARKBLUE, RED,WHITE,/*OTHERS ,*/NUM_COLORS
};



/******
ゲームコントローラー関係
******/
//states of the game
enum GAME_STATE
{
	GAME_STATE_INITIAL,
	GAME_STATE_READY,
	GAME_STATE_SET,
	GAME_STATE_PLAYING,
	GAME_STATE_FINISHED,
};

//team color
enum TEAM_COLOR
{
	TEAM_COLOR_BLUE,
	TEAM_COLOR_RED
};

//states of penalties
enum PENALTY
{
	PENALTY_NONE,
	PENALTY_BALL_HOLDING,
	PENALTY_GOALIE_PUSHING,
	PENALTY_PLAYER_PUSHING,
	PENALTY_ILLEAGAL_DEGFENDER,
	PENALTY_ILLEAGAL_DEFENCE,
	PENALTY_OBSTRUCTION,
	PENALTY_REQ_FOR_PICKING,
	PENALTY_LEAVING,
	PENALTY_DAMAGE,
};

enum HALF_TIME
{
	SECOND_HALF,
	FIRST_HALF
};

enum TAIL_MODE
{
	TAIL_STOP,
	TAIL_SWING,
	TAIL_ANGRY,
	NUM_TAIL_MODE
};

enum HEAD_MODE
{
	HEAD_STOP,
	HEAD_SWING_LOCALIZATION,
	HEAD_SWING_BALL_SEARCH,
	HEAD_SWING_BALL_SEARCH_FAST,
	HEAD_SWING_RIGHT,
	HEAD_SWING_LEFT,
	HEAD_SWING_EIGHT,
	HEAD_WATCH_GROUND,
	HEAD_TRACK,
	HEAD_TRACK_KP,
	HEAD_HOLD,
	HEAD_USHIKUN,
	HEAD_TRACK_NEAR,
	HEAD_WATCHING,
	HEAD_BALL_HOLDING,
	HEAD_HEADING_RIGHT,
	HEAD_HEADING_LEFT,
	NUM_HEAD_MODE
};

enum SOUND_MODE
{
	SOUND_BOOT,
	SOUND_SHOT,
	SOUND_WIN,
	SOUND_LOSE,
	SOUND_DRAW,
	NUM_SOUND_MODE
};

enum HOLD_STATE
{
	HOLD_OK,//つかんだ
	HOLD_NG,//つかもうとして失敗
	HOLD_ING,//つかもうとしてる最中
	HOLD_NOT,//つかみ動作じゃない
	NUM_HOLD_STATE
};

//ボールを見失ってもトラッキングをするフレーム数
#define BALL_TRACKING_FRAME 10

//ランドマーク関係
enum LANDMARK_ID
{
	HIGH_YELLOW_LOW_PINK,
	HIGH_SKYBLUE_LOW_PINK,
	HIGH_PINK_LOW_YELLOW,
	HIGH_PINK_LOW_SKYBLUE,
};

enum SPACE_TAG{
	SPACE_UNKNOWN,
	SPACE_FREE,
	SPACE_NONE,
};


//sound
enum SoundPlayState {
    SPS_IDLE,
	SPS_WAIT,
    SPS_START
};


#endif

